%{

#include "ptsYacc.tab.hpp"
#include "pts.yy.h"
#include "global.h"

int lineNo=1;
ifstream mFile;
FlexLexer* fileFlex;

%}

%%

define |
Define					return	DEFINE;

pentesttime |
PentestTime				return	PENTESTTIME;

pentestgoal |
PentestGoal				return	PENTESTGOAL;

pentesttarget |
PentestTarget			return	PENTESTTARGET;

time |
Time					return	TIME;			

goal |
Goal					return	GOAL;

expectation |
Expectation				return	EXPECTATION;

gain_privilege |
Gain_privilege			return	GAINPRIVILEGE;

goal_privilege |
Goal_privilege			return	GOALPRIVILEGE;

guest					return	GUEST;
user					return	USER;
administrator			return	ADMINISTRATOR;
root					return	ROOT;

expecte_privilege |
Expecte_privilege		return	EXPECTEPRIVILEGE;

path |
Path					return	PATH;

now |
Now						return	NOW;

if						return	IF;
then					return	THEN;
endif					return	ENDIF;

use						return USE;
exploit					return EXPLOIT;
for						return FOR;
penetrate				return PENETRATE;
expect					return EXPECT;
out						return OUT;


"&&"					return AND;
"||"					return OR;
"!"						return NOT;
	
own						return OWN;
connect					return CONNECT;
service					return SERVICE;
trust					return TRUST;

ftp						return FTP;
telnet					return TELNET;
web						return WEB;

domain					return DOMAIN;

mask |
Mask |
MASK					return MASK;

overflow				return OVERFLOW;			
racecondition			return RACECONDITON;
passwordcrack			return PASSWORDCRACK;
login					return LOGIN;

	
">"						return LARGER;
"<"						return LESS;		
"=="					return EQUAL;
"!="					return NOTEQUAL;
">="					return LARGEREQUAL;
"<="					return LESSEQUAL;
"="						return ASSIGN;
	
"{"						return LEFT_BIG_BRACKET;
"}"						return RIGHT_BIG_BRACKET;
"("						return LEFT_SMALL_BRACKET;
")"						return RIGHT_SMALL_BRACKET;
","						return COMM;

[a-zA-Z_][a-z\-A-Z0-9_]*				{yylval.sval=strdup(yytext);return STRING;}

[ ]*|[\t]+	;
\n			lineNo += 1;
(([1][0-9]{2}|[0-9][0-9]?|[2][0-4][0-9]|[2][5][0-5])\.){3}([1][0-9]{2}|[0-9][0-9]?|[2][0-4][0-9]|[2][5][0-5])    {yylval.sval=strdup(yytext);return IPADDR;/*IPµØÖ·0.0.0.1-255.255.255.255*/} 
([01][0-9]|2[0-3]):([0-5][0-9])  {yylval.sval=strdup(yytext);return TIMECONSTANT;/*Ê±¼ä·¶Î§00:00-23:59*/} 
[0-9]+				 {yylval.ival=atoi(yytext);return NUMBER;}


%%

int yylex()
{
	return fileFlex->yylex();
}

int yyInitLexer(char *file)
{
	mFile.clear();
	mFile.open(file);
	if (!mFile)
	{
		return 1;
	}

	fileFlex = new yyFlexLexer(&mFile,NULL);
	return 0;
}

int yyCloseFile()
{
	mFile.close();
	return 0;
}

int yywrap()
{
	return 1;
}
